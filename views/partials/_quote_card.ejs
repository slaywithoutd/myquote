<!-- Quote Card Component with Horizontal Layout and Geometric Topic Indicators -->
<div class="quote-card">
  <!-- Geometric Topic Indicators in Top Right Corner -->
  <% if (quote.topics && quote.topics.length > 0) { %>
    <div class="topic-geometric-indicators">
      <% quote.topics.forEach((topic, index) => { %>
        <div class="geometric-shape" data-topic="<%= topic.name %>" data-topic-id="<%= topic.id || index %>">
          <div class="shape-inner"></div>
        </div>
      <% }) %>
    </div>
  <% } %>

  <div class="quote-content">
    <div class="quote-text">
      <%= quote.text.replace(/[""]/g, '') %>
    </div>

    <% if (quote.description && quote.description.trim() !== '') { %>
      <div class="quote-description">
        <%= quote.description %>
      </div>
    <% } %>

    <div class="quote-author">— <%= quote.author_name %></div>

    <!-- Action buttons for logged in users -->
    <% if (typeof user !== 'undefined' && user) { %>
      <div class="quote-actions mt-2">
        <a href="/quotes/edit/<%= quote.id %>" class="btn btn-sm btn-outline-primary">
          <i class="fas fa-edit"></i> Editar
        </a>
        <button class="btn btn-sm btn-outline-danger ms-1" onclick="deleteQuoteFromCard('<%= quote.id %>')"
          <i class="fas fa-trash"></i> Excluir
        </button>
      </div>
    <% } %>
  </div>

  <!-- Traditional badges kept for reference/fallback -->
  <% if (quote.topics && quote.topics.length > 0) { %>
    <div class="quote-topics traditional-badges" style="display: none;">
      <% quote.topics.forEach(topic => { %>
        <span class="badge bg-secondary"><%= topic.name %></span>
      <% }) %>
    </div>
  <% } %>
</div>

<script>
// Function to delete quote from card
async function deleteQuoteFromCard(quoteId) {
  if (confirm('Tem certeza que deseja excluir esta frase? Esta ação não pode ser desfeita.')) {
    try {
      const response = await fetch(`/api/quotes/${quoteId}`, {
        method: 'DELETE'
      });

      if (response.ok) {
        // Remove the card from the page
        const quoteCard = event.target.closest('.quote-card');
        if (quoteCard) {
          quoteCard.remove();
        }

        // Show success message
        const alert = document.createElement('div');
        alert.className = 'alert alert-success alert-dismissible fade show';
        alert.innerHTML = `
          Frase excluída com sucesso!
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        document.body.prepend(alert);

        // Auto-dismiss after 3 seconds
        setTimeout(() => {
          if (alert.parentNode) {
            alert.remove();
          }
        }, 3000);
      } else {
        const error = await response.json();
        alert('Erro ao excluir frase: ' + error.error);
      }
    } catch (error) {
      alert('Erro ao excluir frase: ' + error.message);
    }
  }
}
</script>
