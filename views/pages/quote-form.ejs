<% layout('layout/main') %>

<div class="container mt-4">
  <div class="row">
    <div class="col-md-8 offset-md-2">
      <div class="card paper-card">
        <div class="card-body">
          <h2 class="card-title text-center"><%= quote ? 'Editar Frase' : 'Nova Frase' %></h2>

          <form id="quoteForm">
            <% if (quote) { %>
              <input type="hidden" id="quoteId" value="<%= quote.id %>">
            <% } %>
            <div class="mb-3">
              <label for="text" class="form-label">Texto da Frase</label>
              <textarea
                class="form-control"
                id="text"
                name="text"
                rows="3"
                required
              ><%= quote ? quote.text : '' %></textarea>
            </div>

            <div class="mb-3">
              <label for="author_name" class="form-label">Autor</label>
              <div class="input-group">
                <input
                  type="text"
                  class="form-control"
                  id="author_name"
                  name="author_name"
                  placeholder="Digite o nome do autor ou clique para selecionar"
                  value="<%= quote && quote.author_name ? quote.author_name : '' %>"
                  required
                  readonly
                >
                <% if (quote && quote.author_id) { %>
                  <input type="hidden" id="author_id" value="<%= quote.author_id %>">
                <% } %>
                <button
                  type="button"
                  class="btn btn-outline-primary"
                  data-bs-toggle="modal"
                  data-bs-target="#authorModal"
                >
                  Selecionar Autor
                </button>
              </div>
            </div>

            <div class="mb-3 topics-container">
              <label class="form-label">Tópicos</label>
              <div class="row g-2">
                <% topics.forEach(topic => { %>
                  <div class="col-md-6 col-lg-4">
                    <div class="form-check">
                      <input
                        class="form-check-input"
                        type="checkbox"
                        name="topics"
                        value="<%= topic.id %>"
                        id="topic<%= topic.id %>"
                        <%= quote && quote.topics && quote.topics.includes(topic.id) ? 'checked' : '' %>
                      >
                      <label class="form-check-label" for="topic<%= topic.id %>">
                        <%= topic.name %>
                      </label>
                    </div>
                  </div>
                <% }); %>
              </div>
            </div>

            <div class="mb-3">
              <label for="description" class="form-label">Descrição</label>
              <textarea
                class="form-control"
                id="description"
                name="description"
                rows="2"
                placeholder="Adicione uma breve descrição para a frase (opcional)"
              ><%= quote ? quote.description || '' : '' %></textarea>
            </div>

            <div class="mb-3">
              <button type="submit" class="btn btn-primary">
              <%= quote ? 'Atualizar Frase' : 'Criar Frase' %>
            </button>
            <% if (quote) { %>
              <button type="button" class="btn btn-danger ms-2" onclick="deleteQuote()">
                Excluir Frase
              </button>
            <% } %>
              <a href="/" class="btn btn-secondary">Cancelar</a>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Modal de Seleção de Autores -->
<div class="modal fade" id="authorModal" tabindex="-1" aria-labelledby="authorModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="authorModalLabel">Selecionar Autor</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <input
            type="text"
            class="form-control"
            id="authorSearch"
            placeholder="Pesquisar autores..."
          >
        </div>
        <div class="row" id="authorsList">
          <% authors.forEach(author => { %>
            <div class="col-md-6 mb-3 author-option" data-author-name="<%= author.name %>" data-author-id="<%= author.id %>">
              <div class="card author-card h-100" style="cursor: pointer;">
                <div class="card-body">
                  <h6 class="card-title">
                    <%= author.name %><% if (author.nationality) { %> - <%= author.nationality %><% } %>
                  </h6>
                  <% if (author.bio) { %>
                    <p class="card-text text-muted small"><%= author.bio %></p>
                  <% } %>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-primary" id="createNewAuthor">Criar Novo Autor</button>
      </div>
    </div>
  </div>
</div>

<script>
// Modal de Seleção de Autores
document.addEventListener('DOMContentLoaded', function() {
    // Funcionalidade de pesquisa de autores
    const authorSearch = document.getElementById('authorSearch');
    const authorOptions = document.querySelectorAll('.author-option');

    authorSearch.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();

        authorOptions.forEach(option => {
            const authorName = option.dataset.authorName.toLowerCase();
            const authorCard = option.querySelector('.card-text');
            const authorBio = authorCard ? authorCard.textContent.toLowerCase() : '';

            if (authorName.includes(searchTerm) || authorBio.includes(searchTerm)) {
                option.style.display = 'block';
            } else {
                option.style.display = 'none';
            }
        });
    });

    // Seleção de autor
    authorOptions.forEach(option => {
        option.addEventListener('click', function() {
            const authorName = this.dataset.authorName;
            document.getElementById('author_name').value = authorName;

            // Fechar modal
            const modalElement = document.getElementById('authorModal');
            const modal = bootstrap.Modal.getInstance(modalElement) || new bootstrap.Modal(modalElement);
            modal.hide();

            // Destacar autor selecionado
            authorOptions.forEach(opt => opt.querySelector('.author-card').classList.remove('selected'));
            this.querySelector('.author-card').classList.add('selected');
        });
    });

    // Criar novo autor
    document.getElementById('createNewAuthor').addEventListener('click', function() {
        window.location.href = '/authors/new';
    });
});

document.getElementById('quoteForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    // Remove any existing error messages
    const existingAlert = document.querySelector('.alert');
    if (existingAlert) {
        existingAlert.remove();
    }

    // Get and validate form data
    const text = document.getElementById('text').value.trim();
    const authorName = document.getElementById('author_name').value.trim();
    const description = document.getElementById('description').value.trim();
    const quoteId = document.getElementById('quoteId')?.value;
    const authorId = document.getElementById('author_id')?.value;
    const isEditing = !!quoteId;

    if (!text || !authorName) {
        showError('Por favor, preencha todos os campos obrigatórios');
        return;
    }

    const formData = {
        text: text,
        description: description,
        author_name: authorName,
        author_id: authorId,
        username: '<%= user.username %>',
        topics: Array.from(document.querySelectorAll('input[name="topics"]:checked'))
            .map(cb => cb.value)
    };

    console.log('Sending data:', formData);

    try {
        const url = isEditing ? `/api/quotes/${quoteId}` : '/api/quotes';
        const method = isEditing ? 'PUT' : 'POST';

        const response = await fetch(url, {
            method: method,
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        });

        const data = await response.json();

        if (!response.ok) {
            throw new Error(data.error || `Erro ao ${isEditing ? 'atualizar' : 'criar'} frase`);
        }

        window.location.href = '/';
    } catch (error) {
        console.error('Error:', error);
        showError(error.message);
    }
});

// Function to delete quote
async function deleteQuote() {
    const quoteId = document.getElementById('quoteId')?.value;
    if (!quoteId) return;

    if (confirm('Tem certeza que deseja excluir esta frase? Esta ação não pode ser desfeita.')) {
        try {
            const response = await fetch(`/api/quotes/${quoteId}`, {
                method: 'DELETE'
            });

            if (response.ok) {
                alert('Frase excluída com sucesso!');
                window.location.href = '/';
            } else {
                const error = await response.json();
                alert('Erro ao excluir frase: ' + error.error);
            }
        } catch (error) {
            alert('Erro ao excluir frase: ' + error.message);
        }
    }
}

function showError(message) {
    const alert = document.createElement('div');
    alert.className = 'alert alert-danger';
    alert.textContent = message;
    document.body.prepend(alert);
}
</script>