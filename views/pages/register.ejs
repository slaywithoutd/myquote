<% layout('layout/main') %>

<div class="container mt-4">
  <div class="row justify-content-center">
    <div class="col-md-6">
      <div class="card">
        <div class="card-body">
          <h2 class="card-title text-center mb-4">Criar Conta</h2>

          <% if (typeof error !== 'undefined') { %>
            <div class="alert alert-danger" role="alert">
              <%= error %>
            </div>
          <% } %>

          <form id="registerForm" class="needs-validation" novalidate>
            <div class="mb-3">
              <label for="username" class="form-label">Nome de Usuário</label>
              <input 
                type="text" 
                class="form-control" 
                id="username" 
                name="username" 
                required 
                minlength="3"
                maxlength="16"
              >
              <div class="invalid-feedback">
                O nome de usuário deve ter entre 3 e 16 caracteres.
              </div>
            </div>

            <div class="mb-3">
              <label for="email" class="form-label">Email</label>
              <input 
                type="email" 
                class="form-control" 
                id="email" 
                name="email" 
                required
              >
              <div class="invalid-feedback">
                Por favor, insira um email válido.
              </div>
            </div>

            <div class="mb-3">
              <label for="password" class="form-label">Senha</label>
              <input 
                type="password" 
                class="form-control" 
                id="password" 
                name="password" 
                required 
                minlength="8"
              >
              <div class="invalid-feedback">
                A senha deve ter no mínimo 8 caracteres.
              </div>
            </div>

            <div class="mb-3">
              <label for="confirmPassword" class="form-label">Confirmar Senha</label>
              <input 
                type="password" 
                class="form-control" 
                id="confirmPassword" 
                required
              >
              <div class="invalid-feedback">
                As senhas não coincidem.
              </div>
            </div>

            <div class="d-grid gap-2">
              <button type="submit" class="btn btn-primary">Criar Conta</button>
              <a href="/login" class="btn btn-link text-center">Já tem uma conta? Entre aqui</a>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.getElementById('registerForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  
  // Form validation
  const form = e.target;
  if (!form.checkValidity()) {
    e.stopPropagation();
    form.classList.add('was-validated');
    return;
  }

  // Password confirmation check
  const password = document.getElementById('password').value;
  const confirmPassword = document.getElementById('confirmPassword').value;
  
  if (password !== confirmPassword) {
    document.getElementById('confirmPassword').setCustomValidity('As senhas não coincidem');
    form.classList.add('was-validated');
    return;
  }

  // Form submission
  try {
    const response = await fetch('/api/users', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        username: document.getElementById('username').value,
        email: document.getElementById('email').value,
        password: password
      })
    });

    const data = await response.json();

    if (!response.ok) {
      throw new Error(data.error || 'Erro ao criar conta');
    }

    // Redirect to login page on success
    window.location.href = '/login';
  } catch (error) {
    // Clear any existing error messages
    const existingAlert = form.querySelector('.alert');
    if (existingAlert) {
      existingAlert.remove();
    }

    // Show new error message
    const alertDiv = document.createElement('div');
    alertDiv.className = 'alert alert-danger mt-3';
    alertDiv.textContent = error.message;
    form.insertBefore(alertDiv, form.firstChild);
  }
});

// Real-time password confirmation validation
document.getElementById('confirmPassword').addEventListener('input', function(e) {
  const password = document.getElementById('password').value;
  if (this.value !== password) {
    this.setCustomValidity('As senhas não coincidem');
  } else {
    this.setCustomValidity('');
  }
});
</script>